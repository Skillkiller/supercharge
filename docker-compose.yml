version: '3.7'

services:

  postgres:
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    volumes:
      - './postgres/data:/var/lib/postgresql/data'
    environment:
      POSTGRES_PASSWORD: 'SuperSecretPassword'
      POSTGRES_USER: 'root'
    restart: always

  # If you want to use pgAdmin as web interface for
  # postgresql, here is a default configuration for
  # docker-compose.
  #
  # pgadmin:
  #   image: 'dpage/pgadmin4'
  #   expose:
  #     - '80'
  #   environment:
  #     PGADMIN_ENABLE_TLS: 'true'
  #     PGADMIN_DEFAULT_EMAIL: 'admin@example.com'
  #     PGADMIN_DEFAULT_PASSWORD: 'SuperSecretPassword'
  #   volumes:
  #     - './pgadmin/data:/var/lib/pgadmin'
  #     - './pgadmin/config/servers.json:/pgadmin4/servers.json'
  #     - '/etc/certs/server.cert:/certs/server.cert:ro'
  #     - '/etc/certs/server.key:/certs/server.key:ro'
  #   restart: on-failure

  nginx:
    image: 'nginx:latest'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      # Specify your SSL certificate
      # location here
      - '/etc/cert:/etc/cert:ro'
    restart: always

  crawler:
    build:
      context: './'
      dockerfile: './Crawler/Dockerfile'
    image: 'supercharge/crawler:latest'
    environment:
      MPS_LOGGING__LOGLEVEL__DEFAULT: 'Information'
      MPS_CONNECTIONSTRINGS__POSTGRES: 'Host=postgres;Database=masterypoints;Username=masterypoints;Password=SuperSecretPassword'
      MPS_RIOTAPI__SECRET: 'RGAPI-...'
      MPS_CRAWLER__EXECON: '03:00'
    restart: always

  restapi:
    build:
      context: './'
      dockerfile: './RestAPI/Dockerfile'
    image: 'supercharge/restapi:latest'
    expose:
      - '80'
    environment:
      MPS_LOGGING__LOGLEVEL__DEFAULT: 'Information'
      MPS_CONNECTIONSTRINGS__POSTGRES: 'Host=postgres;Database=masterypoints;Username=masterypoints;Password=SuperSecretPasword'
      MPS_RIOTAPI__SECRET: 'RGAPI-...'
    restart: always

  webapp:
    build:
      context: './WebApp'
    command: '-dir /app/dist -addr :80 -routes summoner'
    image: 'supercharge/webapp:latest'
    expose:
      - '80'
    restart: always
